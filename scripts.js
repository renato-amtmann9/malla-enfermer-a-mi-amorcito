document.addEventListener("DOMContentLoaded", () => {
  // üí¨ Mostrar frase motivadora aleatoria
  const frases = [
    "¬°T√∫ puedes, futura enfermera! üí™",
    "Un d√≠a a la vez, ¬°pero sin rendirse! üåü",
    "Recuerda por qu√© empezaste ü©∫‚ù§Ô∏è",
    "¬°Cada clic es un paso m√°s cerca de tu t√≠tulo! üéì",
    "Est√°s hecha para esto. ¬°√Ånimo! üíñ"
  ];
  alert(frases[Math.floor(Math.random() * frases.length)]);

  const data = [
    ["1¬∞ A√±o - Primer Semestre", ["üß¨ Biolog√≠a Celular", "üß† Razonamiento Matem√°tico", "üë©‚Äç‚öïÔ∏è Bases Te√≥ricas de la Enfermer√≠a", "üß† Morfolog√≠a Integral", "üß™ Qu√≠mica General y Org√°nica"]],
    ["1¬∞ A√±o - Segundo Semestre", ["üß™ Bioqu√≠mica", "üß† Psicolog√≠a Evolutiva", "üåé Socioantropolog√≠a", "üë©‚Äç‚öïÔ∏è Bases del Cuidado de Enfermer√≠a", "ü¶† Microbiolog√≠a", "üó£ Habilidades Comunicativas"]],
    ["2¬∞ A√±o - Tercer Semestre", ["üß¨ Fisiolog√≠a", "üë©‚Äç‚öïÔ∏è Enfermer√≠a en la Promoci√≥n y Prevenci√≥n en Salud", "üë∂ Cuidado de Enfermer√≠a en el Ciclo Vital", "üåé Salud P√∫blica I", "üó£ Ingl√©s I"]],
    ["2¬∞ A√±o - Cuarto Semestre", ["üß¨ Fisiopatolog√≠a", "üëµ Cuidado de Enfermer√≠a en el Adulto y Adulto Mayor", "üíä Farmacolog√≠a General", "üåé Salud P√∫blica II", "üë®‚Äçüë©‚Äçüëß Bases de Enfermer√≠a en Salud Familiar y Comunitaria", "üó£ Ingl√©s II"]],
    ["3¬∞ A√±o - Quinto Semestre", ["üíä Farmacolog√≠a Cl√≠nica y Farmacovigilancia", "üè° Cuidados de Enfermer√≠a en Salud Familiar", "üë∂ Cuidado de Enfermer√≠a en el Ni√±o y Adulto", "üìä Fundamento de Gesti√≥n y Liderazgo en Enfermer√≠a", "ü©∫ Integrador I: Cuidado de Enfermer√≠a I", "üó£ Ingl√©s III"]],
    ["3¬∞ A√±o - Sexto Semestre", ["üß† Cuidado de Enfermer√≠a en Salud Mental y Comunidad", "üëµ Cuidado de Enfermer√≠a en el Adulto y Adulto Mayor con Alteraci√≥n de Salud", "üìä M√©todo de An√°lisis de Enfermer√≠a", "üè• Administraci√≥n de Unidades de Enfermer√≠a", "üíª Razonamiento Cient√≠fico y TICs", "üó£ Ingl√©s IV"]],
    ["4¬∞ A√±o - S√©ptimo Semestre", ["‚öñÔ∏è √âtica y Legislaci√≥n en Enfermer√≠a", "üë®‚Äçüë©‚Äçüëß Cuidado de Enfermer√≠a en Salud Familiar y Comunitaria", "üë∂ Cuidado de Enfermer√≠a en el Ni√±o y Adolescente con Alteraci√≥n de la Salud", "üìö Desarrollo de Proyectos en Enfermer√≠a", "üß† Pensamiento Cr√≠tico"]],
    ["4¬∞ A√±o - Octavo Semestre", ["üë∂ Cuidado Integral del Ni√±o y Adulto", "üî¨ Seminario de Investigaci√≥n en Enfermer√≠a", "ü©∫ Integrador II: Cuidado de Enfermer√≠a II", "üå± Responsabilidad Social"]],
    ["5¬∞ A√±o - Noveno Semestre", ["üè• Integrador III: Gesti√≥n del Cuidado en Unidades de Enfermer√≠a"]],
    ["5¬∞ A√±o - D√©cimo Semestre", ["üè° Integrador IV: Gesti√≥n del Cuidado en Salud Familiar y Comunitaria"]]
  ];

  const grid = document.querySelector(".grid");
  data.forEach((semestreData, sIndex) => {
    const [tituloOriginal, ramos] = semestreData;
    const semestreDiv = document.createElement("div");
    semestreDiv.classList.add("semester");
    const h2 = document.createElement("h2");
    h2.textContent = tituloOriginal;
    semestreDiv.appendChild(h2);

    ramos.forEach((ramo, cIndex) => {
      const div = document.createElement("div");
      div.classList.add("course");
      div.textContent = ramo;

      const clave = `curso-${sIndex}-${cIndex}`;
      if (localStorage.getItem(clave) === "true") {
        div.classList.add("aprobado");
      }

      div.addEventListener("click", () => {
        div.classList.toggle("aprobado");
        const aprobado = div.classList.contains("aprobado");
        localStorage.setItem(clave, aprobado);

        updateProgress();
        checkSemestre(semestreDiv, h2, tituloOriginal, sIndex);
      });

      div.addEventListener("dblclick", () => {
        const nota = prompt("üìù Escribe una nota sobre este ramo:");
        if (nota) alert(`üíæ Nota guardada: "${nota}" (visible solo ahora)`);
      });

      semestreDiv.appendChild(div);
    });

    grid.appendChild(semestreDiv);
    checkSemestre(semestreDiv, h2, tituloOriginal, sIndex);
  });
  function checkSemestre(semDiv, h2, titulo, sIndex) {
    const cursos = semDiv.querySelectorAll(".course");
    const aprobados = semDiv.querySelectorAll(".course.aprobado");
    const keyFin = `semestre-${sIndex}-completado`;

    if (cursos.length === aprobados.length && !localStorage.getItem(keyFin)) {
      alert(`üéâ ¬°Felicidades! Completaste ${titulo}. ¬°Sigue brillando futura enfermera! üë©‚Äç‚öïÔ∏èüíñ`);
      h2.innerHTML = `${titulo} üèÖ`;
      confetti();
      localStorage.setItem(keyFin, "true");
    } else if (cursos.length !== aprobados.length) {
      h2.innerHTML = titulo;
      localStorage.removeItem(keyFin);
    }
  }

  function updateProgress() {
    const all = document.querySelectorAll(".course");
    const done = document.querySelectorAll(".course.aprobado");
    const percent = Math.round((done.length / all.length) * 100);
    document.getElementById("progress-bar").style.width = percent + "%";
    document.getElementById("progress-text").textContent = `Progreso: ${done.length} aprobados / ${all.length} ramos (${percent}%)`;
  }

  document.getElementById("reset-btn").addEventListener("click", () => {
    if (confirm("¬øEst√°s segura de que quieres reiniciar todo?")) {
      localStorage.clear();
      location.reload();
    }
  });

  document.getElementById("study-mode-btn").addEventListener("click", () => {
    document.querySelectorAll(".semester").forEach(sem => {
      const hasIncompleto = [...sem.querySelectorAll(".course")].some(c => !c.classList.contains("aprobado"));
      sem.style.display = hasIncompleto ? "block" : "none";
    });
  });

  updateProgress();
  // üìÖ Calendario interactivo
  function generateCalendar() {
    const calendar = document.getElementById("calendar");
    const now = new Date();
    const year = now.getFullYear();
    const month = now.getMonth();
    const firstDay = new Date(year, month, 1).getDay();
    const daysInMonth = new Date(year, month + 1, 0).getDate();
    const monthName = now.toLocaleString('default', { month: 'long' });

    let html = `<h3>${monthName.toUpperCase()} ${year}</h3><div style='display:flex;flex-wrap:wrap;'>`;

    const weekDays = ["Dom", "Lun", "Mar", "Mi√©", "Jue", "Vie", "S√°b"];
    weekDays.forEach(d => {
      html += `<div class="calendar-day" style="background:#f9d3e0;font-weight:bold">${d}</div>`;
    });

    for (let i = 0; i < firstDay; i++) {
      html += `<div class="calendar-day empty"></div>`;
    }

    for (let day = 1; day <= daysInMonth; day++) {
      const key = `nota-${year}-${month}-${day}`;
      const nota = localStorage.getItem(key) || "";
      html += `<div class="calendar-day" data-day="${day}" onclick="agendar(${day})">${day}<span class="note">${nota}</span></div>`;
    }

    html += "</div>";
    calendar.innerHTML = html;
  }

  window.agendar = function(day) {
    const now = new Date();
    const key = `nota-${now.getFullYear()}-${now.getMonth()}-${day}`;
    const nota = prompt("üìù ¬øQu√© quieres agendar para el d√≠a " + day + "?");
    if (nota !== null) {
      localStorage.setItem(key, nota);
      generateCalendar();
    }
  };

  generateCalendar();
});
